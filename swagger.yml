swagger: '2.0'
info:
  description: |
    ### API

    Here you will find details about our API.
  version: 1.0.0
  title: Starter
  termsOfService: 'http://microservice-starter.io/terms/'
  contact:
    email: apiteam@microservice-starter.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: localhost:3000
basePath: /
tags:
  - name: User
    description: User operations
  - name: Post
    description: Post operations
schemes: [http]
consumes: [application/json]
produces: [application/json]
paths:
  /user/login:
    post:
      tags: [User]
      summary: Logs user into the system
      description: ''
      action: user.login
      parameters:
        - name: user
          in: body
          description: The user
          required: true
          schema: { $ref: '#/definitions/UserLogin' }
      responses:
        200:
          description: successful operation
          schema: { $ref: '#/definitions/User' }
        400:
          description: Invalid username/password supplied
          schema: { $ref: '#/definitions/Error' }
  /user/logout:
    post:
      tags: [User]
      summary: Logs out current logged in user session
      action: user.logout
      responses:
        200:
          description: successful operation
  /posts:
    get:
      tags: [Post]
      summary: Get all posts
      action: posts.list
      responses:
        200:
          description: successful operation
  /posts/{id}:
    get:
      tags: [Post]
      summary: Get a single post
      action: posts.show
      parameters:
        - name: id
          in: path
      responses:
        200:
          description: successful operation
definitions:
  Error:
    type: object
    properties:
      status: { type: integer }
      type: { type: string }
      message: { type: string }
  User:
    type: object
    properties:
      id: { type: string }
      name: { type: string }
      email: { type: string }
    required: [email]
    example:
      username: demo
      email: demo@foo.com
      access_token: abcd1234
  UserLogin:
    type: object
    properties:
      username: { type: string }
      password: { type: string }
    required: [username, password]
    example:
      username: demo
      password: pass
